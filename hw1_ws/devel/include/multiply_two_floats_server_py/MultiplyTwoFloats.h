// Generated by gencpp from file multiply_two_floats_server_py/MultiplyTwoFloats.msg
// DO NOT EDIT!


#ifndef MULTIPLY_TWO_FLOATS_SERVER_PY_MESSAGE_MULTIPLYTWOFLOATS_H
#define MULTIPLY_TWO_FLOATS_SERVER_PY_MESSAGE_MULTIPLYTWOFLOATS_H

#include <ros/service_traits.h>


#include <multiply_two_floats_server_py/MultiplyTwoFloatsRequest.h>
#include <multiply_two_floats_server_py/MultiplyTwoFloatsResponse.h>


namespace multiply_two_floats_server_py
{

struct MultiplyTwoFloats
{

typedef MultiplyTwoFloatsRequest Request;
typedef MultiplyTwoFloatsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MultiplyTwoFloats
} // namespace multiply_two_floats_server_py


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloats > {
  static const char* value()
  {
    return "eb3958e9614615192c3e63bd0b5590df";
  }

  static const char* value(const ::multiply_two_floats_server_py::MultiplyTwoFloats&) { return value(); }
};

template<>
struct DataType< ::multiply_two_floats_server_py::MultiplyTwoFloats > {
  static const char* value()
  {
    return "multiply_two_floats_server_py/MultiplyTwoFloats";
  }

  static const char* value(const ::multiply_two_floats_server_py::MultiplyTwoFloats&) { return value(); }
};


// service_traits::MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloatsRequest> should match
// service_traits::MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloats >
template<>
struct MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloatsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloats >::value();
  }
  static const char* value(const ::multiply_two_floats_server_py::MultiplyTwoFloatsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::multiply_two_floats_server_py::MultiplyTwoFloatsRequest> should match
// service_traits::DataType< ::multiply_two_floats_server_py::MultiplyTwoFloats >
template<>
struct DataType< ::multiply_two_floats_server_py::MultiplyTwoFloatsRequest>
{
  static const char* value()
  {
    return DataType< ::multiply_two_floats_server_py::MultiplyTwoFloats >::value();
  }
  static const char* value(const ::multiply_two_floats_server_py::MultiplyTwoFloatsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloatsResponse> should match
// service_traits::MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloats >
template<>
struct MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloatsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::multiply_two_floats_server_py::MultiplyTwoFloats >::value();
  }
  static const char* value(const ::multiply_two_floats_server_py::MultiplyTwoFloatsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::multiply_two_floats_server_py::MultiplyTwoFloatsResponse> should match
// service_traits::DataType< ::multiply_two_floats_server_py::MultiplyTwoFloats >
template<>
struct DataType< ::multiply_two_floats_server_py::MultiplyTwoFloatsResponse>
{
  static const char* value()
  {
    return DataType< ::multiply_two_floats_server_py::MultiplyTwoFloats >::value();
  }
  static const char* value(const ::multiply_two_floats_server_py::MultiplyTwoFloatsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MULTIPLY_TWO_FLOATS_SERVER_PY_MESSAGE_MULTIPLYTWOFLOATS_H
